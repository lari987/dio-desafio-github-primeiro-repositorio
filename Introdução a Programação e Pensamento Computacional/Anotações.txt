Area de liguagens de prog √© nova e n√£o √© uma area tradicional

Jun√ß√µes entre devs e ops (redes)

Pilares da ciencia da computa√ß√£o

Decomposi√ß√£o
Padr√µes
Abstra√ß√µes
Algoritmos

Pensamento computacional

Processo de pensamento envolvido na express√£o de solu√ß√µes em passos computacionais ou algoritmos que podem ser implementados no computador

Aprende primeiro no papel pra fortalecer o conhecimento

O pensamento computacional n se restringe a computador

Pensamento sistematico e eficienciente na formula√ß√£o e resolu√ß√£o de problemas

A solu√ßao encontrada tem q ser eficiente tanto pra uma maquina quanto para o ser humano

√â uma habilidade generalista (que engloba matem√°tica, leitura e escrita)

Decomposi√ß√£o
Dividir em partes o problema
E dps unir as partes 


Padr√µes
Reconhecer similaridades

Quando a bolsa valoriza as pessoas saem comprando
Quando ela desvaloriza elas vendem e isso faz com que ela desvalorize mais ainda

Input.¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† Operator.¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† Output

Apos resolver o prob vc tem que pensar essa √© q melhor forma de resolver esse prob? Existem outras mais simples e eficientes? Aperfei√ßoamento

Ciclo testar, analisar e refinar

N√≥s seres humanos temos um dom natural de reconhecer padr√µes e isso precisa ser passado a maquina atrav√©s de treinamento com dados

Competencias geradas pelo pensamento computacional

- Pensamento sistematico
- Colabora√ß√£o dentro da equipe
- Criatividade e design
- Facilitador

Habilidades

- Raciocinio l√≥gico
- Aperfei√ßoamento

Racioc√≠nio l√≥gico √© uma forma de pensamento estruturado, ou racioc√≠nio, que permite encontrar a conclus√£o ou determinar a resolu√ß√£o de um problema

O racioc√≠nio √© exercitado 

Grupos

indu√ß√£o (fenomeno observado)
Dedu√ß√£o (previs√µes e explica√ß√µes) provar q √© verdade
Abdu√ß√£o (apartir de algo observado vc sup√µe alguma coisa) (premissa)


Dado um determinado problema complexo vc quebra ele em partes menores e resolve

A estrat√©gia √© fazer a an√°lise dessas partes menores e gerenci√°veis

Outra estrat√©gia √© usar a s√≠ntese que √© a constru√ß√£o, combinar os elementos recompondo o problema original 
Eles tem que fazer sentido

Executar de forma sequencial ou paralela

Dentro da decomposi√ßao nos temos as variaveis que estao presentes nesses probs pequenos que sao determinados pela segmenta√ßao do problema maior

Existem maneiras distintas de decompor o mesmo problema 

Fazer uma balan√ßa dos recursos que vc tem para resolver o prob

Como funciona a decomposi√ß√£o??

Identificar ou coletar os dados
Agregar os dados 
Funcionalidade

Um ex classico de decomposi√ß√£o √© na hora de conzinhar


Reconhecimento de Padr√µes

Modelo base
Estrutura invariante

Fotos em redes sociais comprimem as fotos para armazenar no banco de dados

Compressao de dados no padrao de cores

Os seres vivos fazem reconhecimento de padrao naturalmente
Aciona no cerebro oq vc ja viu ou q ja teve de experi√™ncia

Porque determinar padr√µes?

Com a finaidade de generalizar, obtendo resolu√ß√£o para problemas diferentes

Os padr√µes s√£o feitos com base em classes e categorias 

- Grau de similaridade
- Grupos conhecidos x desconhecidos

Como o computador constroi padroes?

Por compara√ß√£o

- representando os atributos
Para que a maquina consiga aprender atraves daquele conceito associado
Ele armazena esses dados para consultas posteriores
Regras de decis√£o

Abstrair

Observar, um ou mais elementos avaliando caracterisiticas e propriedades em separado

Abstra√ß√£o

Processo intelectual de isolamento de um objeto da realidade

Generalizar 

Tornar-se geral mais amplo

Para representar os alunos e suas caracterisiticas na base de dados vou considerar apenas o importante

Conceitos baseados em abstra√ß√£o

- Busca binaria
- Lista
- Arvore
- Grafos
- Clusteting
- Merge sort

As arquiteturas em si s√£o abstra√ß√µes

Prob de melhor caminho

Algoritmos

Instru√ß√µes para que o computador execute uma tarefa

Programas -> instru√ß√µes

Ele recebe, manipula e armazena dados


Para se criar uma instru√ßao:
Vc precisa definir oq ser√° feito e qual a ordem da execu√ß√£o

O algoritmo precisa ser entendido por um humano e uma maquina 

- Codifica√ß√£o √© utilizar das linguagens de programa√ß√£o para realizar o programa

Como construir um algoritmo?

Entender o prob
Definir os dados de entrada
Definir o processamento
Definir os dados de saida
Utilizar um metodo de constru√ß√£o
Teste e diagn√≥stico

Podem ser feitos atrav√©s de:

Narrativa (ling natural)
Fluxograma (estrutura grafica)
Pseudocodigo (mais prox de programa√ß√£o)

Problema sobreviv√™ncia

Decomposi√ß√£o √°gua, comida e abrigo

Em cada um desses se repete o fogo 

Utiliza√ßao de mapa para localiza√ß√£o na hora de procurar abrigo, o mapa dever√° ser criado por abstra√ß√£o 

T√©cnicas pro 1 estudo de caso

Decomposi√ß√£o
Reconhecimento de Padr√µes
Abstra√ß√£o

Preparando a comida..

Cria√ß√£o de um algoritmo

2 estudo de caso (soma do intervalo)

3 estudo de caso (advinhe o numero)

O que √© l√≥gica??

A l√≥gica serve para solucionar algum problema
E um problema √© uma quest√£o

Logica:
Parte da filosofia que trata das formas do pensamento em geral (dedu√ß√£o, indu√ß√£o, hip√≥tese e infer√™ncia) e das opera√ß√µes intelectuais que visam √† determina√ß√£o do que √© verdadeiro ou n√£o

- organiza√ß√£o coesa

Organiza√ßao e palnejamento das instru√ß√µes, assertivas em um algoritmo, a fim de viabilizar a implanta√ß√£o de um programa.

Tecnicas de l√≥gica de programa√ß√£o

Linear

Ordena√ß√£o de elementos por uma √∫nica propriedade.

- Execu√ß√£o sequenciada

- Recursos limitados

- √önica dimens√£o

Estruturada

Organiza√ß√£o, disposi√ß√£o e ordem dos elementos essenciais que comp√µem um corpo (concreto ou abstrato)

Nela eu posso ter mais de uma op√ß√£o, ela n√£o √© linear

Modular

Partes independentes
Controlada por um conjunto de regras

Dados de entrada

¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† üîΩ

Processo de transforma√ß√£o

¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† üîΩ

Dados de sa√≠da

Tipologia e variaveis

Qual a fun√ß√£o de um computador? Processar informa√ß√µes essas informa√ß√µes podem ser dados ou instru√ß√µes

Num√©ricos
Caracteres
L√≥gicos -> booleano

Instru√ß√µes s√£o linguaguem de palavra-chave (vocabul√°rio) de uma determinada liguagem de programa√ß√£o 


Estruturas Condicionais

Simples s√≥ tem SE
Composta tem SE e SEN√ÉO
Encadeada tem SE, SEN√ÉO SE, e SEN√ÉO

And intersec√ßao
Or Uni√£o
Not 

La√ßos

Diminiu linhas
Compreens√£o facilitada
Redu√ßao de erro
Condi√ß√£o de parada

Enquanto... Fa√ßa
Do while

Repita... at√©

Para... De... At√©... Fa√ßa
For

Vetor e matriz

Vetor √© uma matriz unidimensional
Com tamanho fixo

Matriz possui mXn linha X colunas
Uma cole√ß√£o de vetores

Fun√ß√µes

Metodo -> prog ori obj
Bloco
Sub-rotina

Uma elemento se conecte com outro e te gere um valor

S√£o blocos que realiza tarefas espec√≠ficas que podem ser chamadas no seu codigo principal

As fun√ß√µes permitem fazer uma modulariza√ßao no seu c√≥digo

Assinatura da fun√ß√£o
(Nome e par√¢metros)

Entrada
Metadados
O teclado
Banco de dados
Arquivos

Sa√≠da
Consiste na impressao dos dados do mundo abstrato 

Tela
Salvar num arquivo
Banco de dados

2 tipos de sa√≠da, programada e interrup√ß√£o

A prog pode ser condicional (aguarda o dispositivo) e incondicional 

Casos de saida
Bem sucedida
Erro de sintaxe
Erros de programa√ß√£o
Prob com a interface

Toda inova√ß√£o tecnol√≥gica come√ßa pelo hardware e depois para o software

O hardware limita a capacidade do software

A algebra booleana √© a base para os computadores atuais

Charles babbage e ada lovelance criou instru√ßoes q validariam as de charles

Alan turing 2 guerra mundial
Maquina de descripta√ßao do inimigo

Turing, neunam e shanon criaram o projeto Dilab que √© um codificador de voz

Neunam e turing trabalharam no ACE 

1950 escreveu um artigo sobre se uma maquina conseguiria pensar (IA)

shanom se perguntou se poderia utilizar da algebra booleana

Maquina de tabular

Possibilitou usar essa maquina governo americano

Primeiros computadores

V√°lvula, harvard mark 1 eniac um computador program√°vel
Recebiam instru√ßoes por fios

1943 colossus 1952 edvac (ja tinha o prog armazenado)

Em 1975 bill gates criou a linguagem basic da Microsoft e o mini computador intel 8080

1976 apple 77 apple 2
80 apple 3
83 a apple criou o Lisa mas foi um fracasso
88 Windows 2000
2001 windows xp

1949 surgiu a primeira linguagem de prog
Assembly (linguagem de maquina)

90 surgi linguagens de alto nivel (python, ruby e java, C#)

Problemas computacionais
Problemas de decisao (carater l√≥gico (SIM ou N√£o)¬† busca (grafos) e otimiza√ß√£o (maximizar ou minimizar uma fun√ß√£o)


Metodo padronizado composto por um conjunto de regras sint√°ticas e sem√¢nticas de implementa√ß√£o de um codigo fonte

Realizo meu codigo com linguagem de alto nivel passo para o compilador ele analisa e traduz o meu programa em um codigo em baixo nivel para o computador entender

Programa fonte √© oq eu escrevi
Programa objeto √© oque a maquina vai entender

Tradu√ß√£o 
(cria um prog objeto para que o computador entenda) 
- mais rapido
- prog menores
C++
Java

X 

interpreta√ß√£o 
(executa diretamente sem criar um prog objeto)
- maior flexibilidade
- mais lenta
Javascript
Ruby
Python

Coisas a serem levadas em conta ao se escrever um algoritmo

Legibilidade boa leitura
Redigibilidade bem escrito
Confiabilidade possa executar oq precisa
Custo baixo custo

Quando o c√≥digo vai pro compilador ela faz

Uma analise lexica agrupar os caracteres, identificando as palavras reservadas, vari√°veis...

Analise sint√°tica corrige o programa se √† alguma irregularidade para aquela linguagem
#a IDE geralmente apresenta

Analise sem√¢ntica se possui sentido para aquele problema n√£o faz o que √© esperado
#tem que debugar

Paradigmas da programa√ß√£o

S√£o diretrizes e regras

- Orienta√ß√£o √† objeto

- procedural
Chamadas sucessivas e procedimentos separados

- funcional
Instru√ß√µes baseadas em fun√ß√µes

- estruturado
Estrutura de blocos aninhados (sequencia) 

- computa√ß√£o distribu√≠da
Fun√ß√µes executadas de forma independente

- l√≥gico



Um objeto tem caracteristicas que sao:

#atributos oque tenho

#comportamento (metodos) oque sou capaz de fazer 

#estados como fa√ßo

Benef√≠cios

POO
Reuso de c√≥digo

PE
Problemas especificos e diretos

#Analise de dados com python

Portugol